### Starting build.
# Target: tests/test.ml.depends, tags: { package(oUnit), extension:ml, file:tests/test.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package oUnit -modules tests/test.ml > tests/test.ml.depends
# Target: src/main.ml.depends, tags: { package(oUnit), extension:ml, file:src/main.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package oUnit -modules src/main.ml > src/main.ml.depends
# Target: src/main.cmo, tags: { package(oUnit), byte, compile, extension:cmo, extension:ml, file:src/main.cmo, file:src/main.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -package oUnit -I src -o src/main.cmo src/main.ml
+ ocamlfind ocamlc -c -package oUnit -I src -o src/main.cmo src/main.ml
File "src/main.ml", line 141, characters 2-94:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
SO
  ((SApp _|SLambda (_, _)|SLetStx (_, _, _)|SQuote _|SQuoteStx _|
   SQuoteStxObj _),
  _)
File "src/main.ml", line 149, characters 17-457:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
File "src/main.ml", line 276, characters 17-359:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
File "src/main.ml", line 303, characters 2-236:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SOList []|SO (_, _))
File "src/main.ml", line 338, characters 4-46:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SOList (_::[])|SOList []|SO (_, _))
File "src/main.ml", line 340, characters 4-43:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SOList []|SO (_, _))
File "src/main.ml", line 342, characters 4-48:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SOList []|SO (_, _))
File "src/main.ml", line 348, characters 4-147:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SId _|SApp _|SLetStx (_, _, _)|SQuote _|SQuoteStx _|SQuoteStxObj _)
File "src/main.ml", line 347, characters 4-181:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
SO (_, _)
File "src/main.ml", line 361, characters 4-161:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SId _|SApp _|SLetStx (_, _, _)|SQuote _|SQuoteStx _|SQuoteStxObj _)
File "src/main.ml", line 377, characters 17-445:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
File "src/main.ml", line 372, characters 2-644:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
SO
  ((SApp _|SLambda (_, _)|SLetStx (_, _, _)|SQuote _|SQuoteStx _|
   SQuoteStxObj _),
  _)
File "src/main.ml", line 326, characters 4-5:
Warning 11: this match case is unused.
# Target: tests/test.cmo, tags: { package(oUnit), byte, compile, extension:cmo, extension:ml, file:tests/test.cmo, file:tests/test.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -package oUnit -I tests -I src -o tests/test.cmo tests/test.ml
# Target: src/main.cmx, tags: { package(oUnit), compile, extension:cmx, extension:ml, file:src/main.cmx, file:src/main.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -package oUnit -I src -o src/main.cmx src/main.ml
+ ocamlfind ocamlopt -c -package oUnit -I src -o src/main.cmx src/main.ml
File "src/main.ml", line 141, characters 2-94:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
SO
  ((SApp _|SLambda (_, _)|SLetStx (_, _, _)|SQuote _|SQuoteStx _|
   SQuoteStxObj _),
  _)
File "src/main.ml", line 149, characters 17-457:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
File "src/main.ml", line 276, characters 17-359:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
File "src/main.ml", line 303, characters 2-236:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SOList []|SO (_, _))
File "src/main.ml", line 338, characters 4-46:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SOList (_::[])|SOList []|SO (_, _))
File "src/main.ml", line 340, characters 4-43:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SOList []|SO (_, _))
File "src/main.ml", line 342, characters 4-48:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SOList []|SO (_, _))
File "src/main.ml", line 348, characters 4-147:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SId _|SApp _|SLetStx (_, _, _)|SQuote _|SQuoteStx _|SQuoteStxObj _)
File "src/main.ml", line 347, characters 4-181:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
SO (_, _)
File "src/main.ml", line 361, characters 4-161:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SId _|SApp _|SLetStx (_, _, _)|SQuote _|SQuoteStx _|SQuoteStxObj _)
File "src/main.ml", line 377, characters 17-445:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
File "src/main.ml", line 372, characters 2-644:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
SO
  ((SApp _|SLambda (_, _)|SLetStx (_, _, _)|SQuote _|SQuoteStx _|
   SQuoteStxObj _),
  _)
File "src/main.ml", line 326, characters 4-5:
Warning 11: this match case is unused.
# Target: tests/test.cmx, tags: { package(oUnit), compile, extension:cmx, extension:ml, file:tests/test.cmx, file:tests/test.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -package oUnit -I tests -I src -o tests/test.cmx tests/test.ml
# Target: tests/test.native, tags: { package(oUnit), dont_link_with, extension:native, file:tests/test.native, link, native, ocaml, program, quiet }
ocamlfind ocamlopt -linkpkg -package oUnit -I src -I tests src/main.cmx tests/test.cmx -o tests/test.native
# Compilation successful.
